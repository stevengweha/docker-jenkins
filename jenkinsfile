pipeline {
    agent any  

    environment {
        CONTAINER_ID = ""  
        SUM_PY_PATH = "./sum.py"  
        DIR_PATH = "./"  
        TEST_FILE_PATH = "./test_variables.txt"  
    }

    stages {
        stage('Check Running Container') {
            steps {
                script {
                    if (isUnix()) {
                        env.CONTAINER_ID = sh(script: "docker ps -q -f ancestor=sum-app", returnStdout: true).trim()
                    } else {
                        env.CONTAINER_ID = bat(script: "docker ps -q -f ancestor=sum-app", returnStdout: true).trim()
                    }

                    if (!env.CONTAINER_ID) {
                        error "‚ö†Ô∏è Aucun conteneur existant trouv√© pour l‚Äôimage sum-app ! Assurez-vous qu'il est lanc√© avant d'ex√©cuter la pipeline."
                    } else {
                        echo "‚úÖ Conteneur existant d√©tect√© : ${env.CONTAINER_ID}"
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    def testLines = readFile(TEST_FILE_PATH).split('\n')
                    for (line in testLines) {
                        def vars = line.split(' ')
                        def arg1 = vars[0]
                        def arg2 = vars[1]
                        def expectedSum = vars[2].toFloat()

                        def output
                        if (isUnix()) {
                            output = sh(script: "docker exec ${env.CONTAINER_ID} python ${SUM_PY_PATH} ${arg1} ${arg2}", returnStdout: true).trim()
                        } else {
                            output = bat(script: "docker exec ${env.CONTAINER_ID} python ${SUM_PY_PATH} ${arg1} ${arg2}", returnStdout: true).trim()
                        }

                        def result = output.toFloat()

                        if (result == expectedSum) {
                            echo "‚úÖ Test r√©ussi : ${arg1} + ${arg2} = ${result}"
                        } else {
                            error "‚ùå Test √©chou√© : ${arg1} + ${arg2} attendu ${expectedSum} mais obtenu ${result}"
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "üöÄ D√©ploiement sur DockerHub..."
                    
                    if (isUnix()) {
                        sh "docker login -u \$DOCKER_USERNAME -p \$DOCKER_PASSWORD"
                        sh "docker tag sum-app monrepo/sum-app:latest"
                        sh "docker push monrepo/sum-app:latest"
                    } else {
                        bat "docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%"
                        bat "docker tag sum-app monrepo/sum-app:latest"
                        bat "docker push monrepo/sum-app:latest"
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                if (env.CONTAINER_ID?.trim()) {
                    echo "üìå Nettoyage : Arr√™t et suppression du conteneur ${env.CONTAINER_ID}"
                    if (isUnix()) {
                        sh "docker stop ${env.CONTAINER_ID} || true"
                        sh "docker rm ${env.CONTAINER_ID} || true"
                    } else {
                        bat "docker stop ${env.CONTAINER_ID} || echo ignored"
                        bat "docker rm ${env.CONTAINER_ID} || echo ignored"
                    }
                } else {
                    echo "‚ö†Ô∏è Aucun conteneur trouv√© pour nettoyage."
                }
            }
        }
    }
}
